/**
 * Copyright (C) 2015 Deepin Technology Co., Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 **/

/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DBusLauncher -p dbuslauncher launcherinterface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "dbuslauncher.h"


ItemInfo::ItemInfo(){

}

ItemInfo::~ItemInfo(){

}

void ItemInfo::registerMetaType()
{
    qRegisterMetaType<ItemInfo>("ItemInfo");
    qDBusRegisterMetaType<ItemInfo>();
    qRegisterMetaType<QMap<QString,ItemInfo>>("QMap<QString,ItemInfo>");
    qDBusRegisterMetaType<QMap<QString,ItemInfo>>();
    qRegisterMetaType<QList<ItemInfo>>("QList<ItemInfo>");
    qDBusRegisterMetaType<QList<ItemInfo>>();
}

QDBusArgument &operator<<(QDBusArgument &argument, const ItemInfo &obj)
{
    argument.beginStructure();
    argument << obj.url << obj.name;
    argument << obj.key << obj.iconKey;
    argument << obj.id << obj.intsalledTime;

    argument.endStructure();
    return argument;
}


const QDBusArgument &operator>>(const QDBusArgument &argument, ItemInfo &obj)
{
    argument.beginStructure();
    argument >> obj.url >> obj.name;
    argument >> obj.key >> obj.iconKey;
    argument >> obj.id >> obj.intsalledTime;
    argument.endStructure();
    return argument;
}

QDebug &operator <<(QDebug &debug, const ItemInfo &obj)
{
      debug << "LauncherItemInfo:"
            << QString("[url:%1, name:%2, key:%3, iconKey:%4, id:%5, intsalledTime:%6, isAutoStart:%7, icon:%8]")
               .arg(obj.url)
               .arg(obj.name)
               .arg(obj.key)
               .arg(obj.iconKey)
               .arg(obj.id)
               .arg(obj.intsalledTime)
               .arg(obj.isAutoStart)
               .arg(obj.icon);
      return debug;
}

/*
 * Implementation of interface class DBusLauncher
 */

DBusLauncher::DBusLauncher(QObject *parent)
    : QDBusAbstractInterface(staticServiceName(), staticInterfacePath(), staticInterfaceName(), QDBusConnection::sessionBus(), parent)
{
    ItemInfo::registerMetaType();
    QDBusConnection::sessionBus().connect(this->service(), this->path(), "org.freedesktop.DBus.Properties",  "PropertiesChanged","sa{sv}as", this, SLOT(__propertyChanged__(QDBusMessage)));
}

DBusLauncher::~DBusLauncher()
{
    QDBusConnection::sessionBus().disconnect(service(), path(), "org.freedesktop.DBus.Properties",  "PropertiesChanged",  "sa{sv}as", this, SLOT(propertyChanged(QDBusMessage)));
}

